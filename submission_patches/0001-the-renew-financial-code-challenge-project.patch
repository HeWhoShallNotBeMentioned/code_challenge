From 39d06132d3157a27e2525f5a9abbfe4151d1e8a1 Mon Sep 17 00:00:00 2001
From: Christopher Underwood
 <christopherunderwood@Christophers-MacBook-Pro-2.local>
Date: Tue, 17 Nov 2015 13:28:56 -0800
Subject: [PATCH] the renew financial code challenge project

---
 renew_financial_code_challenge/.gitignore          |  13 ++
 renew_financial_code_challenge/Gemfile             |  27 +++
 renew_financial_code_challenge/Gemfile.lock        | 185 +++++++++++++++++++++
 renew_financial_code_challenge/README.rdoc         |  58 +++++++
 renew_financial_code_challenge/Rakefile            |   6 +
 .../app/assets/images/.keep                        |   0
 .../app/assets/javascripts/application.js          |  16 ++
 .../app/assets/stylesheets/application.css         |  15 ++
 .../app/controllers/application_controller.rb      |   5 +
 .../app/controllers/concerns/.keep                 |   0
 .../app/controllers/deals_controller.rb            |  17 ++
 .../app/helpers/application_helper.rb              |   2 +
 renew_financial_code_challenge/app/mailers/.keep   |   0
 renew_financial_code_challenge/app/models/.keep    |   0
 .../app/models/concerns/.keep                      |   0
 renew_financial_code_challenge/app/models/deal.rb  |  10 ++
 .../app/views/deals/index.html.erb                 |  35 ++++
 .../app/views/layouts/application.html.erb         |  17 ++
 renew_financial_code_challenge/bin/bundle          |   3 +
 renew_financial_code_challenge/bin/rails           |  10 ++
 renew_financial_code_challenge/bin/rake            |  10 ++
 renew_financial_code_challenge/bin/setup           |  29 ++++
 renew_financial_code_challenge/bin/spring          |  15 ++
 renew_financial_code_challenge/config.ru           |   4 +
 .../config/application.rb                          |  37 +++++
 renew_financial_code_challenge/config/boot.rb      |   3 +
 renew_financial_code_challenge/config/database.yml |  85 ++++++++++
 .../config/environment.rb                          |   5 +
 .../config/environments/development.rb             |  41 +++++
 .../config/environments/production.rb              |  79 +++++++++
 .../config/environments/test.rb                    |  42 +++++
 .../config/initializers/assets.rb                  |  11 ++
 .../config/initializers/backtrace_silencers.rb     |   7 +
 .../config/initializers/cookies_serializer.rb      |   3 +
 .../initializers/filter_parameter_logging.rb       |   4 +
 .../config/initializers/inflections.rb             |  16 ++
 .../config/initializers/mime_types.rb              |   4 +
 .../config/initializers/session_store.rb           |   3 +
 .../config/initializers/wrap_parameters.rb         |  14 ++
 .../config/locales/en.yml                          |  23 +++
 renew_financial_code_challenge/config/routes.rb    |  62 +++++++
 renew_financial_code_challenge/config/secrets.yml  |  22 +++
 .../db/migrate/20151117020623_create_deal_a_day.rb |  14 ++
 .../migrate/20151117065331_rename_deal_a_days.rb   |   5 +
 renew_financial_code_challenge/db/schema.rb        |  30 ++++
 renew_financial_code_challenge/db/seeds.rb         |   7 +
 renew_financial_code_challenge/lib/assets/.keep    |   0
 renew_financial_code_challenge/lib/tasks/.keep     |   0
 renew_financial_code_challenge/log/.keep           |   0
 renew_financial_code_challenge/public/404.html     |  67 ++++++++
 renew_financial_code_challenge/public/422.html     |  67 ++++++++
 renew_financial_code_challenge/public/500.html     |  66 ++++++++
 renew_financial_code_challenge/public/favicon.ico  |   0
 renew_financial_code_challenge/public/robots.txt   |   5 +
 .../vendor/assets/javascripts/.keep                |   0
 .../vendor/assets/stylesheets/.keep                |   0
 56 files changed, 1199 insertions(+)
 create mode 100644 renew_financial_code_challenge/.gitignore
 create mode 100644 renew_financial_code_challenge/Gemfile
 create mode 100644 renew_financial_code_challenge/Gemfile.lock
 create mode 100644 renew_financial_code_challenge/README.rdoc
 create mode 100644 renew_financial_code_challenge/Rakefile
 create mode 100644 renew_financial_code_challenge/app/assets/images/.keep
 create mode 100644 renew_financial_code_challenge/app/assets/javascripts/application.js
 create mode 100644 renew_financial_code_challenge/app/assets/stylesheets/application.css
 create mode 100644 renew_financial_code_challenge/app/controllers/application_controller.rb
 create mode 100644 renew_financial_code_challenge/app/controllers/concerns/.keep
 create mode 100644 renew_financial_code_challenge/app/controllers/deals_controller.rb
 create mode 100644 renew_financial_code_challenge/app/helpers/application_helper.rb
 create mode 100644 renew_financial_code_challenge/app/mailers/.keep
 create mode 100644 renew_financial_code_challenge/app/models/.keep
 create mode 100644 renew_financial_code_challenge/app/models/concerns/.keep
 create mode 100644 renew_financial_code_challenge/app/models/deal.rb
 create mode 100644 renew_financial_code_challenge/app/views/deals/index.html.erb
 create mode 100644 renew_financial_code_challenge/app/views/layouts/application.html.erb
 create mode 100755 renew_financial_code_challenge/bin/bundle
 create mode 100755 renew_financial_code_challenge/bin/rails
 create mode 100755 renew_financial_code_challenge/bin/rake
 create mode 100755 renew_financial_code_challenge/bin/setup
 create mode 100755 renew_financial_code_challenge/bin/spring
 create mode 100644 renew_financial_code_challenge/config.ru
 create mode 100644 renew_financial_code_challenge/config/application.rb
 create mode 100644 renew_financial_code_challenge/config/boot.rb
 create mode 100644 renew_financial_code_challenge/config/database.yml
 create mode 100644 renew_financial_code_challenge/config/environment.rb
 create mode 100644 renew_financial_code_challenge/config/environments/development.rb
 create mode 100644 renew_financial_code_challenge/config/environments/production.rb
 create mode 100644 renew_financial_code_challenge/config/environments/test.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/assets.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/backtrace_silencers.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/cookies_serializer.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/filter_parameter_logging.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/inflections.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/mime_types.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/session_store.rb
 create mode 100644 renew_financial_code_challenge/config/initializers/wrap_parameters.rb
 create mode 100644 renew_financial_code_challenge/config/locales/en.yml
 create mode 100644 renew_financial_code_challenge/config/routes.rb
 create mode 100644 renew_financial_code_challenge/config/secrets.yml
 create mode 100644 renew_financial_code_challenge/db/migrate/20151117020623_create_deal_a_day.rb
 create mode 100644 renew_financial_code_challenge/db/migrate/20151117065331_rename_deal_a_days.rb
 create mode 100644 renew_financial_code_challenge/db/schema.rb
 create mode 100644 renew_financial_code_challenge/db/seeds.rb
 create mode 100644 renew_financial_code_challenge/lib/assets/.keep
 create mode 100644 renew_financial_code_challenge/lib/tasks/.keep
 create mode 100644 renew_financial_code_challenge/log/.keep
 create mode 100644 renew_financial_code_challenge/public/404.html
 create mode 100644 renew_financial_code_challenge/public/422.html
 create mode 100644 renew_financial_code_challenge/public/500.html
 create mode 100644 renew_financial_code_challenge/public/favicon.ico
 create mode 100644 renew_financial_code_challenge/public/robots.txt
 create mode 100644 renew_financial_code_challenge/vendor/assets/javascripts/.keep
 create mode 100644 renew_financial_code_challenge/vendor/assets/stylesheets/.keep

diff --git a/renew_financial_code_challenge/.gitignore b/renew_financial_code_challenge/.gitignore
new file mode 100644
index 0000000..5b61ab0
--- /dev/null
+++ b/renew_financial_code_challenge/.gitignore
@@ -0,0 +1,13 @@
+# See https://help.github.com/articles/ignoring-files for more about ignoring files.
+#
+# If you find yourself ignoring temporary files generated by your text editor
+# or operating system, you probably want to add a global ignore instead:
+#   git config --global core.excludesfile '~/.gitignore_global'
+
+# Ignore bundler config.
+/.bundle
+
+# Ignore all logfiles and tempfiles.
+/log/*
+!/log/.keep
+/tmp
diff --git a/renew_financial_code_challenge/Gemfile b/renew_financial_code_challenge/Gemfile
new file mode 100644
index 0000000..8cd7f16
--- /dev/null
+++ b/renew_financial_code_challenge/Gemfile
@@ -0,0 +1,27 @@
+source 'https://rubygems.org'
+
+gem 'rails'
+gem 'pg'
+gem 'sass-rails'
+gem 'uglifier'
+gem 'coffee-rails'
+gem 'jquery-rails'
+gem 'turbolinks'
+gem 'smarter_csv'
+
+group :development do
+  gem 'byebug'
+  gem 'web-console'
+  gem 'spring'
+  gem 'quiet_assets'
+end
+
+group :test, :development do
+  gem 'rspec-rails'
+  gem 'launchy'
+  gem 'pry'
+end
+
+group :test do
+  gem 'shoulda-matchers'
+end
diff --git a/renew_financial_code_challenge/Gemfile.lock b/renew_financial_code_challenge/Gemfile.lock
new file mode 100644
index 0000000..8bffcc6
--- /dev/null
+++ b/renew_financial_code_challenge/Gemfile.lock
@@ -0,0 +1,185 @@
+GEM
+  remote: https://rubygems.org/
+  specs:
+    actionmailer (4.2.4)
+      actionpack (= 4.2.4)
+      actionview (= 4.2.4)
+      activejob (= 4.2.4)
+      mail (~> 2.5, >= 2.5.4)
+      rails-dom-testing (~> 1.0, >= 1.0.5)
+    actionpack (4.2.4)
+      actionview (= 4.2.4)
+      activesupport (= 4.2.4)
+      rack (~> 1.6)
+      rack-test (~> 0.6.2)
+      rails-dom-testing (~> 1.0, >= 1.0.5)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    actionview (4.2.4)
+      activesupport (= 4.2.4)
+      builder (~> 3.1)
+      erubis (~> 2.7.0)
+      rails-dom-testing (~> 1.0, >= 1.0.5)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    activejob (4.2.4)
+      activesupport (= 4.2.4)
+      globalid (>= 0.3.0)
+    activemodel (4.2.4)
+      activesupport (= 4.2.4)
+      builder (~> 3.1)
+    activerecord (4.2.4)
+      activemodel (= 4.2.4)
+      activesupport (= 4.2.4)
+      arel (~> 6.0)
+    activesupport (4.2.4)
+      i18n (~> 0.7)
+      json (~> 1.7, >= 1.7.7)
+      minitest (~> 5.1)
+      thread_safe (~> 0.3, >= 0.3.4)
+      tzinfo (~> 1.1)
+    addressable (2.3.8)
+    arel (6.0.3)
+    binding_of_caller (0.7.2)
+      debug_inspector (>= 0.0.1)
+    builder (3.2.2)
+    byebug (8.2.0)
+    coderay (1.1.0)
+    coffee-rails (4.1.0)
+      coffee-script (>= 2.2.0)
+      railties (>= 4.0.0, < 5.0)
+    coffee-script (2.4.1)
+      coffee-script-source
+      execjs
+    coffee-script-source (1.10.0)
+    debug_inspector (0.0.2)
+    diff-lcs (1.2.5)
+    erubis (2.7.0)
+    execjs (2.6.0)
+    globalid (0.3.6)
+      activesupport (>= 4.1.0)
+    i18n (0.7.0)
+    jquery-rails (4.0.5)
+      rails-dom-testing (~> 1.0)
+      railties (>= 4.2.0)
+      thor (>= 0.14, < 2.0)
+    json (1.8.3)
+    launchy (2.4.3)
+      addressable (~> 2.3)
+    loofah (2.0.3)
+      nokogiri (>= 1.5.9)
+    mail (2.6.3)
+      mime-types (>= 1.16, < 3)
+    method_source (0.8.2)
+    mime-types (2.6.2)
+    mini_portile (0.6.2)
+    minitest (5.8.2)
+    nokogiri (1.6.6.3)
+      mini_portile (~> 0.6.0)
+    pg (0.18.4)
+    pry (0.10.3)
+      coderay (~> 1.1.0)
+      method_source (~> 0.8.1)
+      slop (~> 3.4)
+    quiet_assets (1.1.0)
+      railties (>= 3.1, < 5.0)
+    rack (1.6.4)
+    rack-test (0.6.3)
+      rack (>= 1.0)
+    rails (4.2.4)
+      actionmailer (= 4.2.4)
+      actionpack (= 4.2.4)
+      actionview (= 4.2.4)
+      activejob (= 4.2.4)
+      activemodel (= 4.2.4)
+      activerecord (= 4.2.4)
+      activesupport (= 4.2.4)
+      bundler (>= 1.3.0, < 2.0)
+      railties (= 4.2.4)
+      sprockets-rails
+    rails-deprecated_sanitizer (1.0.3)
+      activesupport (>= 4.2.0.alpha)
+    rails-dom-testing (1.0.7)
+      activesupport (>= 4.2.0.beta, < 5.0)
+      nokogiri (~> 1.6.0)
+      rails-deprecated_sanitizer (>= 1.0.1)
+    rails-html-sanitizer (1.0.2)
+      loofah (~> 2.0)
+    railties (4.2.4)
+      actionpack (= 4.2.4)
+      activesupport (= 4.2.4)
+      rake (>= 0.8.7)
+      thor (>= 0.18.1, < 2.0)
+    rake (10.4.2)
+    rspec-core (3.3.2)
+      rspec-support (~> 3.3.0)
+    rspec-expectations (3.3.1)
+      diff-lcs (>= 1.2.0, < 2.0)
+      rspec-support (~> 3.3.0)
+    rspec-mocks (3.3.2)
+      diff-lcs (>= 1.2.0, < 2.0)
+      rspec-support (~> 3.3.0)
+    rspec-rails (3.3.3)
+      actionpack (>= 3.0, < 4.3)
+      activesupport (>= 3.0, < 4.3)
+      railties (>= 3.0, < 4.3)
+      rspec-core (~> 3.3.0)
+      rspec-expectations (~> 3.3.0)
+      rspec-mocks (~> 3.3.0)
+      rspec-support (~> 3.3.0)
+    rspec-support (3.3.0)
+    sass (3.4.19)
+    sass-rails (5.0.4)
+      railties (>= 4.0.0, < 5.0)
+      sass (~> 3.1)
+      sprockets (>= 2.8, < 4.0)
+      sprockets-rails (>= 2.0, < 4.0)
+      tilt (>= 1.1, < 3)
+    shoulda-matchers (3.0.0)
+      activesupport (>= 4.0.0)
+    slop (3.6.0)
+    smarter_csv (1.1.0)
+    spring (1.4.2)
+    sprockets (3.4.0)
+      rack (> 1, < 3)
+    sprockets-rails (2.3.3)
+      actionpack (>= 3.0)
+      activesupport (>= 3.0)
+      sprockets (>= 2.8, < 4.0)
+    thor (0.19.1)
+    thread_safe (0.3.5)
+    tilt (2.0.1)
+    turbolinks (2.5.3)
+      coffee-rails
+    tzinfo (1.2.2)
+      thread_safe (~> 0.1)
+    uglifier (2.7.2)
+      execjs (>= 0.3.0)
+      json (>= 1.8.0)
+    web-console (2.2.1)
+      activemodel (>= 4.0)
+      binding_of_caller (>= 0.7.2)
+      railties (>= 4.0)
+      sprockets-rails (>= 2.0, < 4.0)
+
+PLATFORMS
+  ruby
+
+DEPENDENCIES
+  byebug
+  coffee-rails
+  jquery-rails
+  launchy
+  pg
+  pry
+  quiet_assets
+  rails
+  rspec-rails
+  sass-rails
+  shoulda-matchers
+  smarter_csv
+  spring
+  turbolinks
+  uglifier
+  web-console
+
+BUNDLED WITH
+   1.10.6
diff --git a/renew_financial_code_challenge/README.rdoc b/renew_financial_code_challenge/README.rdoc
new file mode 100644
index 0000000..bfbe0d3
--- /dev/null
+++ b/renew_financial_code_challenge/README.rdoc
@@ -0,0 +1,58 @@
+# _{Renew Financial Intern Code Challenge}_
+
+##### _{Uploads a csv file and shows the data}, {Nov, 17 2015}_
+
+#### By _**{Chris Underwood}**_
+
+## Description
+
+_{The application uploads a csv file with headers that match the columns of a database take, parses the data, saves it in the database, and then displays the data in a view. In addition of the raw data, a total of all
+ the transaction dollars to date is displayed. Multiple files can be uploaded using this system as the records are added to the database which is what is queried to populate the view. There are no unit tests or
+ integration tests in the application.}
+
+## Setup
+
+See the Technologies Used section for more information about the environment that this was created with.
+
+In the command line migrate to where the file is downloaded.
+
+bundle install (this is needed for some of the specific gems used on this program)
+rake db:create (to get database running)
+rake db:migrate (to create the database table and fields)
+rails s (to get the rails web server running)
+in the browser go to localhost:3000 to see the application.
+
+
+
+## Technologies Used
+
+Ruby version 2.2.2
+Rails version 4.2.4
+Postgres versionn 9.4.4
+require csv
+gem smarter_csv
+
+### Legal
+
+
+Copyright (c) 2015 **_{Chris Underwood}_**
+
+This software is licensed under the MIT license.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff --git a/renew_financial_code_challenge/Rakefile b/renew_financial_code_challenge/Rakefile
new file mode 100644
index 0000000..ba6b733
--- /dev/null
+++ b/renew_financial_code_challenge/Rakefile
@@ -0,0 +1,6 @@
+# Add your own tasks in files placed in lib/tasks ending in .rake,
+# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
+
+require File.expand_path('../config/application', __FILE__)
+
+Rails.application.load_tasks
diff --git a/renew_financial_code_challenge/app/assets/images/.keep b/renew_financial_code_challenge/app/assets/images/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/app/assets/javascripts/application.js b/renew_financial_code_challenge/app/assets/javascripts/application.js
new file mode 100644
index 0000000..e07c5a8
--- /dev/null
+++ b/renew_financial_code_challenge/app/assets/javascripts/application.js
@@ -0,0 +1,16 @@
+// This is a manifest file that'll be compiled into application.js, which will include all the files
+// listed below.
+//
+// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
+// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
+//
+// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
+// compiled file.
+//
+// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
+// about supported directives.
+//
+//= require jquery
+//= require jquery_ujs
+//= require turbolinks
+//= require_tree .
diff --git a/renew_financial_code_challenge/app/assets/stylesheets/application.css b/renew_financial_code_challenge/app/assets/stylesheets/application.css
new file mode 100644
index 0000000..f9cd5b3
--- /dev/null
+++ b/renew_financial_code_challenge/app/assets/stylesheets/application.css
@@ -0,0 +1,15 @@
+/*
+ * This is a manifest file that'll be compiled into application.css, which will include all the files
+ * listed below.
+ *
+ * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
+ * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
+ *
+ * You're free to add application-wide styles to this file and they'll appear at the bottom of the
+ * compiled file so the styles you add here take precedence over styles defined in any styles
+ * defined in the other CSS/SCSS files in this directory. It is generally better to create a new
+ * file per style scope.
+ *
+ *= require_tree .
+ *= require_self
+ */
diff --git a/renew_financial_code_challenge/app/controllers/application_controller.rb b/renew_financial_code_challenge/app/controllers/application_controller.rb
new file mode 100644
index 0000000..d83690e
--- /dev/null
+++ b/renew_financial_code_challenge/app/controllers/application_controller.rb
@@ -0,0 +1,5 @@
+class ApplicationController < ActionController::Base
+  # Prevent CSRF attacks by raising an exception.
+  # For APIs, you may want to use :null_session instead.
+  protect_from_forgery with: :exception
+end
diff --git a/renew_financial_code_challenge/app/controllers/concerns/.keep b/renew_financial_code_challenge/app/controllers/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/app/controllers/deals_controller.rb b/renew_financial_code_challenge/app/controllers/deals_controller.rb
new file mode 100644
index 0000000..832a331
--- /dev/null
+++ b/renew_financial_code_challenge/app/controllers/deals_controller.rb
@@ -0,0 +1,17 @@
+class DealsController < ApplicationController
+
+  def index
+    @transactions = Deal.all
+    @total = 0
+    respond_to do |format|
+      format.html
+      format.csv { send_data @transactions.to_csv }
+    end
+  end
+
+  def import
+    Deal.import(params[:file])
+    redirect_to root_url, notice: "Products imported!"
+  end
+
+end
diff --git a/renew_financial_code_challenge/app/helpers/application_helper.rb b/renew_financial_code_challenge/app/helpers/application_helper.rb
new file mode 100644
index 0000000..de6be79
--- /dev/null
+++ b/renew_financial_code_challenge/app/helpers/application_helper.rb
@@ -0,0 +1,2 @@
+module ApplicationHelper
+end
diff --git a/renew_financial_code_challenge/app/mailers/.keep b/renew_financial_code_challenge/app/mailers/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/app/models/.keep b/renew_financial_code_challenge/app/models/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/app/models/concerns/.keep b/renew_financial_code_challenge/app/models/concerns/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/app/models/deal.rb b/renew_financial_code_challenge/app/models/deal.rb
new file mode 100644
index 0000000..8c0d0a7
--- /dev/null
+++ b/renew_financial_code_challenge/app/models/deal.rb
@@ -0,0 +1,10 @@
+class Deal < ActiveRecord::Base
+  require 'csv'
+  require 'smarter_csv'
+
+  def self.import(file)
+    SmarterCSV.process(file.path) do |row|
+      Deal.create! row
+    end
+  end
+end
diff --git a/renew_financial_code_challenge/app/views/deals/index.html.erb b/renew_financial_code_challenge/app/views/deals/index.html.erb
new file mode 100644
index 0000000..7aa5f96
--- /dev/null
+++ b/renew_financial_code_challenge/app/views/deals/index.html.erb
@@ -0,0 +1,35 @@
+<h1>Dr. Deal a Days Transactions</h1>
+
+
+<table>
+  <tr>
+    <th>Purchaser</th>
+    <th>Item Description</th>
+    <th>Unit Price</th>
+    <th>Units Purchased</th>
+    <th>Merchant Address</th>
+    <th>Merchant Name</th>
+  </tr>
+  <% @transactions.each do |transaction| %>
+    <tr>
+       <td><%= transaction.purchaser_name %></td>
+       <td><%= transaction.item_description %></td>
+       <td><%= transaction.item_price %></td>
+       <td><%= transaction.purchase_count %></td>
+       <td><%= transaction.merchant_address %></td>
+       <td><%= transaction.merchant_name %></td>
+    </tr>
+    <% @total = @total + (transaction.item_price * transaction.purchase_count) %>
+<% end %>
+  Total Purchased: <%= @total %>
+</table>
+
+<h3>Import Transcations</h3>
+
+<%= form_tag import_deals_path, multipart: true do %>
+  <%= file_field_tag :file %>
+
+  <%= submit_tag "Import" %>
+
+<% end %>
+<td></td><td></td>
diff --git a/renew_financial_code_challenge/app/views/layouts/application.html.erb b/renew_financial_code_challenge/app/views/layouts/application.html.erb
new file mode 100644
index 0000000..ad4db56
--- /dev/null
+++ b/renew_financial_code_challenge/app/views/layouts/application.html.erb
@@ -0,0 +1,17 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>RenewFinancialCodeChallenge</title>
+  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
+  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
+  <%= csrf_meta_tags %>
+</head>
+<body>
+
+<%= yield %>
+
+<%= flash[:notice] %>
+<%= flash[:alert] %>
+
+</body>
+</html>
diff --git a/renew_financial_code_challenge/bin/bundle b/renew_financial_code_challenge/bin/bundle
new file mode 100755
index 0000000..66e9889
--- /dev/null
+++ b/renew_financial_code_challenge/bin/bundle
@@ -0,0 +1,3 @@
+#!/usr/bin/env ruby
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
+load Gem.bin_path('bundler', 'bundle')
diff --git a/renew_financial_code_challenge/bin/rails b/renew_financial_code_challenge/bin/rails
new file mode 100755
index 0000000..1cd6d9f
--- /dev/null
+++ b/renew_financial_code_challenge/bin/rails
@@ -0,0 +1,10 @@
+#!/usr/bin/env ruby
+begin
+  spring_bin_path = File.expand_path('../spring', __FILE__)
+  load spring_bin_path
+rescue LoadError => e
+  raise unless e.message.end_with? spring_bin_path, 'spring/binstub'
+end
+APP_PATH = File.expand_path('../../config/application', __FILE__)
+require_relative '../config/boot'
+require 'rails/commands'
diff --git a/renew_financial_code_challenge/bin/rake b/renew_financial_code_challenge/bin/rake
new file mode 100755
index 0000000..7b1f640
--- /dev/null
+++ b/renew_financial_code_challenge/bin/rake
@@ -0,0 +1,10 @@
+#!/usr/bin/env ruby
+begin
+  spring_bin_path = File.expand_path('../spring', __FILE__)
+  load spring_bin_path
+rescue LoadError => e
+  raise unless e.message.end_with? spring_bin_path, 'spring/binstub'
+end
+require_relative '../config/boot'
+require 'rake'
+Rake.application.run
diff --git a/renew_financial_code_challenge/bin/setup b/renew_financial_code_challenge/bin/setup
new file mode 100755
index 0000000..acdb2c1
--- /dev/null
+++ b/renew_financial_code_challenge/bin/setup
@@ -0,0 +1,29 @@
+#!/usr/bin/env ruby
+require 'pathname'
+
+# path to your application root.
+APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)
+
+Dir.chdir APP_ROOT do
+  # This script is a starting point to setup your application.
+  # Add necessary setup steps to this file:
+
+  puts "== Installing dependencies =="
+  system "gem install bundler --conservative"
+  system "bundle check || bundle install"
+
+  # puts "\n== Copying sample files =="
+  # unless File.exist?("config/database.yml")
+  #   system "cp config/database.yml.sample config/database.yml"
+  # end
+
+  puts "\n== Preparing database =="
+  system "bin/rake db:setup"
+
+  puts "\n== Removing old logs and tempfiles =="
+  system "rm -f log/*"
+  system "rm -rf tmp/cache"
+
+  puts "\n== Restarting application server =="
+  system "touch tmp/restart.txt"
+end
diff --git a/renew_financial_code_challenge/bin/spring b/renew_financial_code_challenge/bin/spring
new file mode 100755
index 0000000..62ec28f
--- /dev/null
+++ b/renew_financial_code_challenge/bin/spring
@@ -0,0 +1,15 @@
+#!/usr/bin/env ruby
+
+# This file loads spring without using Bundler, in order to be fast.
+# It gets overwritten when you run the `spring binstub` command.
+
+unless defined?(Spring)
+  require 'rubygems'
+  require 'bundler'
+
+  if (match = Bundler.default_lockfile.read.match(/^GEM$.*?^    (?:  )*spring \((.*?)\)$.*?^$/m))
+    Gem.paths = { 'GEM_PATH' => [Bundler.bundle_path.to_s, *Gem.path].uniq }
+    gem 'spring', match[1]
+    require 'spring/binstub'
+  end
+end
diff --git a/renew_financial_code_challenge/config.ru b/renew_financial_code_challenge/config.ru
new file mode 100644
index 0000000..bd83b25
--- /dev/null
+++ b/renew_financial_code_challenge/config.ru
@@ -0,0 +1,4 @@
+# This file is used by Rack-based servers to start the application.
+
+require ::File.expand_path('../config/environment', __FILE__)
+run Rails.application
diff --git a/renew_financial_code_challenge/config/application.rb b/renew_financial_code_challenge/config/application.rb
new file mode 100644
index 0000000..cc970c1
--- /dev/null
+++ b/renew_financial_code_challenge/config/application.rb
@@ -0,0 +1,37 @@
+require File.expand_path('../boot', __FILE__)
+
+require "csv"
+require "rails"
+# Pick the frameworks you want:
+require "active_model/railtie"
+require "active_job/railtie"
+require "active_record/railtie"
+require "action_controller/railtie"
+require "action_mailer/railtie"
+require "action_view/railtie"
+require "sprockets/railtie"
+
+# require "rails/test_unit/railtie"
+
+# Require the gems listed in Gemfile, including any gems
+# you've limited to :test, :development, or :production.
+Bundler.require(*Rails.groups)
+
+module RenewFinancialCodeChallenge
+  class Application < Rails::Application
+    # Settings in config/environments/* take precedence over those specified here.
+    # Application configuration should go into files in config/initializers
+    # -- all .rb files in that directory are automatically loaded.
+
+    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.
+    # Run "rake -D time" for a list of tasks for finding time zone names. Default is UTC.
+    # config.time_zone = 'Central Time (US & Canada)'
+
+    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.
+    # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]
+    # config.i18n.default_locale = :de
+
+    # Do not swallow errors in after_commit/after_rollback callbacks.
+    config.active_record.raise_in_transactional_callbacks = true
+  end
+end
diff --git a/renew_financial_code_challenge/config/boot.rb b/renew_financial_code_challenge/config/boot.rb
new file mode 100644
index 0000000..6b750f0
--- /dev/null
+++ b/renew_financial_code_challenge/config/boot.rb
@@ -0,0 +1,3 @@
+ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
+
+require 'bundler/setup' # Set up gems listed in the Gemfile.
diff --git a/renew_financial_code_challenge/config/database.yml b/renew_financial_code_challenge/config/database.yml
new file mode 100644
index 0000000..1eeab25
--- /dev/null
+++ b/renew_financial_code_challenge/config/database.yml
@@ -0,0 +1,85 @@
+# PostgreSQL. Versions 8.2 and up are supported.
+#
+# Install the pg driver:
+#   gem install pg
+# On OS X with Homebrew:
+#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
+# On OS X with MacPorts:
+#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
+# On Windows:
+#   gem install pg
+#       Choose the win32 build.
+#       Install PostgreSQL and put its /bin directory on your path.
+#
+# Configure Using Gemfile
+# gem 'pg'
+#
+default: &default
+  adapter: postgresql
+  encoding: unicode
+  # For details on connection pooling, see rails configuration guide
+  # http://guides.rubyonrails.org/configuring.html#database-pooling
+  pool: 5
+
+development:
+  <<: *default
+  database: renew_financial_code_challenge_development
+
+  # The specified database role being used to connect to postgres.
+  # To create additional roles in postgres see `$ createuser --help`.
+  # When left blank, postgres will use the default role. This is
+  # the same name as the operating system user that initialized the database.
+  #username: renew_financial_code_challenge
+
+  # The password associated with the postgres role (username).
+  #password:
+
+  # Connect on a TCP socket. Omitted by default since the client uses a
+  # domain socket that doesn't need configuration. Windows does not have
+  # domain sockets, so uncomment these lines.
+  #host: localhost
+
+  # The TCP port the server listens on. Defaults to 5432.
+  # If your server runs on a different port number, change accordingly.
+  #port: 5432
+
+  # Schema search path. The server defaults to $user,public
+  #schema_search_path: myapp,sharedapp,public
+
+  # Minimum log levels, in increasing order:
+  #   debug5, debug4, debug3, debug2, debug1,
+  #   log, notice, warning, error, fatal, and panic
+  # Defaults to warning.
+  #min_messages: notice
+
+# Warning: The database defined as "test" will be erased and
+# re-generated from your development database when you run "rake".
+# Do not set this db to the same as development or production.
+test:
+  <<: *default
+  database: renew_financial_code_challenge_test
+
+# As with config/secrets.yml, you never want to store sensitive information,
+# like your database password, in your source code. If your source code is
+# ever seen by anyone, they now have access to your database.
+#
+# Instead, provide the password as a unix environment variable when you boot
+# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
+# for a full rundown on how to provide these environment variables in a
+# production deployment.
+#
+# On Heroku and other platform providers, you may have a full connection URL
+# available as an environment variable. For example:
+#
+#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
+#
+# You can use this database configuration with:
+#
+#   production:
+#     url: <%= ENV['DATABASE_URL'] %>
+#
+production:
+  <<: *default
+  database: renew_financial_code_challenge_production
+  username: renew_financial_code_challenge
+  password: <%= ENV['RENEW_FINANCIAL_CODE_CHALLENGE_DATABASE_PASSWORD'] %>
diff --git a/renew_financial_code_challenge/config/environment.rb b/renew_financial_code_challenge/config/environment.rb
new file mode 100644
index 0000000..ee8d90d
--- /dev/null
+++ b/renew_financial_code_challenge/config/environment.rb
@@ -0,0 +1,5 @@
+# Load the Rails application.
+require File.expand_path('../application', __FILE__)
+
+# Initialize the Rails application.
+Rails.application.initialize!
diff --git a/renew_financial_code_challenge/config/environments/development.rb b/renew_financial_code_challenge/config/environments/development.rb
new file mode 100644
index 0000000..b55e214
--- /dev/null
+++ b/renew_financial_code_challenge/config/environments/development.rb
@@ -0,0 +1,41 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # In the development environment your application's code is reloaded on
+  # every request. This slows down response time but is perfect for development
+  # since you don't have to restart the web server when you make code changes.
+  config.cache_classes = false
+
+  # Do not eager load code on boot.
+  config.eager_load = false
+
+  # Show full error reports and disable caching.
+  config.consider_all_requests_local       = true
+  config.action_controller.perform_caching = false
+
+  # Don't care if the mailer can't send.
+  config.action_mailer.raise_delivery_errors = false
+
+  # Print deprecation notices to the Rails logger.
+  config.active_support.deprecation = :log
+
+  # Raise an error on page load if there are pending migrations.
+  config.active_record.migration_error = :page_load
+
+  # Debug mode disables concatenation and preprocessing of assets.
+  # This option may cause significant delays in view rendering with a large
+  # number of complex assets.
+  config.assets.debug = true
+
+  # Asset digests allow you to set far-future HTTP expiration dates on all assets,
+  # yet still be able to expire them through the digest params.
+  config.assets.digest = true
+
+  # Adds additional error checking when serving assets at runtime.
+  # Checks for improperly declared sprockets dependencies.
+  # Raises helpful error messages.
+  config.assets.raise_runtime_errors = true
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+end
diff --git a/renew_financial_code_challenge/config/environments/production.rb b/renew_financial_code_challenge/config/environments/production.rb
new file mode 100644
index 0000000..5c1b32e
--- /dev/null
+++ b/renew_financial_code_challenge/config/environments/production.rb
@@ -0,0 +1,79 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # Code is not reloaded between requests.
+  config.cache_classes = true
+
+  # Eager load code on boot. This eager loads most of Rails and
+  # your application in memory, allowing both threaded web servers
+  # and those relying on copy on write to perform better.
+  # Rake tasks automatically ignore this option for performance.
+  config.eager_load = true
+
+  # Full error reports are disabled and caching is turned on.
+  config.consider_all_requests_local       = false
+  config.action_controller.perform_caching = true
+
+  # Enable Rack::Cache to put a simple HTTP cache in front of your application
+  # Add `rack-cache` to your Gemfile before enabling this.
+  # For large-scale production use, consider using a caching reverse proxy like
+  # NGINX, varnish or squid.
+  # config.action_dispatch.rack_cache = true
+
+  # Disable serving static files from the `/public` folder by default since
+  # Apache or NGINX already handles this.
+  config.serve_static_files = ENV['RAILS_SERVE_STATIC_FILES'].present?
+
+  # Compress JavaScripts and CSS.
+  config.assets.js_compressor = :uglifier
+  # config.assets.css_compressor = :sass
+
+  # Do not fallback to assets pipeline if a precompiled asset is missed.
+  config.assets.compile = false
+
+  # Asset digests allow you to set far-future HTTP expiration dates on all assets,
+  # yet still be able to expire them through the digest params.
+  config.assets.digest = true
+
+  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb
+
+  # Specifies the header that your server uses for sending files.
+  # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache
+  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX
+
+  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
+  # config.force_ssl = true
+
+  # Use the lowest log level to ensure availability of diagnostic information
+  # when problems arise.
+  config.log_level = :debug
+
+  # Prepend all log lines with the following tags.
+  # config.log_tags = [ :subdomain, :uuid ]
+
+  # Use a different logger for distributed setups.
+  # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)
+
+  # Use a different cache store in production.
+  # config.cache_store = :mem_cache_store
+
+  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
+  # config.action_controller.asset_host = 'http://assets.example.com'
+
+  # Ignore bad email addresses and do not raise email delivery errors.
+  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
+  # config.action_mailer.raise_delivery_errors = false
+
+  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
+  # the I18n.default_locale when a translation cannot be found).
+  config.i18n.fallbacks = true
+
+  # Send deprecation notices to registered listeners.
+  config.active_support.deprecation = :notify
+
+  # Use default logging formatter so that PID and timestamp are not suppressed.
+  config.log_formatter = ::Logger::Formatter.new
+
+  # Do not dump schema after migrations.
+  config.active_record.dump_schema_after_migration = false
+end
diff --git a/renew_financial_code_challenge/config/environments/test.rb b/renew_financial_code_challenge/config/environments/test.rb
new file mode 100644
index 0000000..1c19f08
--- /dev/null
+++ b/renew_financial_code_challenge/config/environments/test.rb
@@ -0,0 +1,42 @@
+Rails.application.configure do
+  # Settings specified here will take precedence over those in config/application.rb.
+
+  # The test environment is used exclusively to run your application's
+  # test suite. You never need to work with it otherwise. Remember that
+  # your test database is "scratch space" for the test suite and is wiped
+  # and recreated between test runs. Don't rely on the data there!
+  config.cache_classes = true
+
+  # Do not eager load code on boot. This avoids loading your whole application
+  # just for the purpose of running a single test. If you are using a tool that
+  # preloads Rails for running tests, you may have to set it to true.
+  config.eager_load = false
+
+  # Configure static file server for tests with Cache-Control for performance.
+  config.serve_static_files   = true
+  config.static_cache_control = 'public, max-age=3600'
+
+  # Show full error reports and disable caching.
+  config.consider_all_requests_local       = true
+  config.action_controller.perform_caching = false
+
+  # Raise exceptions instead of rendering exception templates.
+  config.action_dispatch.show_exceptions = false
+
+  # Disable request forgery protection in test environment.
+  config.action_controller.allow_forgery_protection = false
+
+  # Tell Action Mailer not to deliver emails to the real world.
+  # The :test delivery method accumulates sent emails in the
+  # ActionMailer::Base.deliveries array.
+  config.action_mailer.delivery_method = :test
+
+  # Randomize the order test cases are executed.
+  config.active_support.test_order = :random
+
+  # Print deprecation notices to the stderr.
+  config.active_support.deprecation = :stderr
+
+  # Raises error for missing translations
+  # config.action_view.raise_on_missing_translations = true
+end
diff --git a/renew_financial_code_challenge/config/initializers/assets.rb b/renew_financial_code_challenge/config/initializers/assets.rb
new file mode 100644
index 0000000..01ef3e6
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/assets.rb
@@ -0,0 +1,11 @@
+# Be sure to restart your server when you modify this file.
+
+# Version of your assets, change this if you want to expire all your assets.
+Rails.application.config.assets.version = '1.0'
+
+# Add additional assets to the asset load path
+# Rails.application.config.assets.paths << Emoji.images_path
+
+# Precompile additional assets.
+# application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
+# Rails.application.config.assets.precompile += %w( search.js )
diff --git a/renew_financial_code_challenge/config/initializers/backtrace_silencers.rb b/renew_financial_code_challenge/config/initializers/backtrace_silencers.rb
new file mode 100644
index 0000000..59385cd
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/backtrace_silencers.rb
@@ -0,0 +1,7 @@
+# Be sure to restart your server when you modify this file.
+
+# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
+# Rails.backtrace_cleaner.add_silencer { |line| line =~ /my_noisy_library/ }
+
+# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
+# Rails.backtrace_cleaner.remove_silencers!
diff --git a/renew_financial_code_challenge/config/initializers/cookies_serializer.rb b/renew_financial_code_challenge/config/initializers/cookies_serializer.rb
new file mode 100644
index 0000000..7f70458
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/cookies_serializer.rb
@@ -0,0 +1,3 @@
+# Be sure to restart your server when you modify this file.
+
+Rails.application.config.action_dispatch.cookies_serializer = :json
diff --git a/renew_financial_code_challenge/config/initializers/filter_parameter_logging.rb b/renew_financial_code_challenge/config/initializers/filter_parameter_logging.rb
new file mode 100644
index 0000000..4a994e1
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/filter_parameter_logging.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Configure sensitive parameters which will be filtered from the log file.
+Rails.application.config.filter_parameters += [:password]
diff --git a/renew_financial_code_challenge/config/initializers/inflections.rb b/renew_financial_code_challenge/config/initializers/inflections.rb
new file mode 100644
index 0000000..ac033bf
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/inflections.rb
@@ -0,0 +1,16 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new inflection rules using the following format. Inflections
+# are locale specific, and you may define rules for as many different
+# locales as you wish. All of these examples are active by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.plural /^(ox)$/i, '\1en'
+#   inflect.singular /^(ox)en/i, '\1'
+#   inflect.irregular 'person', 'people'
+#   inflect.uncountable %w( fish sheep )
+# end
+
+# These inflection rules are supported but not enabled by default:
+# ActiveSupport::Inflector.inflections(:en) do |inflect|
+#   inflect.acronym 'RESTful'
+# end
diff --git a/renew_financial_code_challenge/config/initializers/mime_types.rb b/renew_financial_code_challenge/config/initializers/mime_types.rb
new file mode 100644
index 0000000..dc18996
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/mime_types.rb
@@ -0,0 +1,4 @@
+# Be sure to restart your server when you modify this file.
+
+# Add new mime types for use in respond_to blocks:
+# Mime::Type.register "text/richtext", :rtf
diff --git a/renew_financial_code_challenge/config/initializers/session_store.rb b/renew_financial_code_challenge/config/initializers/session_store.rb
new file mode 100644
index 0000000..9aa509f
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/session_store.rb
@@ -0,0 +1,3 @@
+# Be sure to restart your server when you modify this file.
+
+Rails.application.config.session_store :cookie_store, key: '_renew_financial_code_challenge_session'
diff --git a/renew_financial_code_challenge/config/initializers/wrap_parameters.rb b/renew_financial_code_challenge/config/initializers/wrap_parameters.rb
new file mode 100644
index 0000000..33725e9
--- /dev/null
+++ b/renew_financial_code_challenge/config/initializers/wrap_parameters.rb
@@ -0,0 +1,14 @@
+# Be sure to restart your server when you modify this file.
+
+# This file contains settings for ActionController::ParamsWrapper which
+# is enabled by default.
+
+# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
+ActiveSupport.on_load(:action_controller) do
+  wrap_parameters format: [:json] if respond_to?(:wrap_parameters)
+end
+
+# To enable root element in JSON for ActiveRecord objects.
+# ActiveSupport.on_load(:active_record) do
+#  self.include_root_in_json = true
+# end
diff --git a/renew_financial_code_challenge/config/locales/en.yml b/renew_financial_code_challenge/config/locales/en.yml
new file mode 100644
index 0000000..0653957
--- /dev/null
+++ b/renew_financial_code_challenge/config/locales/en.yml
@@ -0,0 +1,23 @@
+# Files in the config/locales directory are used for internationalization
+# and are automatically loaded by Rails. If you want to use locales other
+# than English, add the necessary files in this directory.
+#
+# To use the locales, use `I18n.t`:
+#
+#     I18n.t 'hello'
+#
+# In views, this is aliased to just `t`:
+#
+#     <%= t('hello') %>
+#
+# To use a different locale, set it with `I18n.locale`:
+#
+#     I18n.locale = :es
+#
+# This would use the information in config/locales/es.yml.
+#
+# To learn more, please read the Rails Internationalization guide
+# available at http://guides.rubyonrails.org/i18n.html.
+
+en:
+  hello: "Hello world"
diff --git a/renew_financial_code_challenge/config/routes.rb b/renew_financial_code_challenge/config/routes.rb
new file mode 100644
index 0000000..f64c832
--- /dev/null
+++ b/renew_financial_code_challenge/config/routes.rb
@@ -0,0 +1,62 @@
+Rails.application.routes.draw do
+
+  resources :deals do
+    collection { post :import }
+  end
+
+  root 'deals#index'
+  # The priority is based upon order of creation: first created -> highest priority.
+  # See how all your routes lay out with "rake routes".
+
+  # You can have the root of your site routed with "root"
+  # root 'welcome#index'
+
+  # Example of regular route:
+  #   get 'products/:id' => 'catalog#view'
+
+  # Example of named route that can be invoked with purchase_url(id: product.id)
+  #   get 'products/:id/purchase' => 'catalog#purchase', as: :purchase
+
+  # Example resource route (maps HTTP verbs to controller actions automatically):
+  #   resources :products
+
+  # Example resource route with options:
+  #   resources :products do
+  #     member do
+  #       get 'short'
+  #       post 'toggle'
+  #     end
+  #
+  #     collection do
+  #       get 'sold'
+  #     end
+  #   end
+
+  # Example resource route with sub-resources:
+  #   resources :products do
+  #     resources :comments, :sales
+  #     resource :seller
+  #   end
+
+  # Example resource route with more complex sub-resources:
+  #   resources :products do
+  #     resources :comments
+  #     resources :sales do
+  #       get 'recent', on: :collection
+  #     end
+  #   end
+
+  # Example resource route with concerns:
+  #   concern :toggleable do
+  #     post 'toggle'
+  #   end
+  #   resources :posts, concerns: :toggleable
+  #   resources :photos, concerns: :toggleable
+
+  # Example resource route within a namespace:
+  #   namespace :admin do
+  #     # Directs /admin/products/* to Admin::ProductsController
+  #     # (app/controllers/admin/products_controller.rb)
+  #     resources :products
+  #   end
+end
diff --git a/renew_financial_code_challenge/config/secrets.yml b/renew_financial_code_challenge/config/secrets.yml
new file mode 100644
index 0000000..1651cc3
--- /dev/null
+++ b/renew_financial_code_challenge/config/secrets.yml
@@ -0,0 +1,22 @@
+# Be sure to restart your server when you modify this file.
+
+# Your secret key is used for verifying the integrity of signed cookies.
+# If you change this key, all old signed cookies will become invalid!
+
+# Make sure the secret is at least 30 characters and all random,
+# no regular words or you'll be exposed to dictionary attacks.
+# You can use `rake secret` to generate a secure secret key.
+
+# Make sure the secrets in this file are kept private
+# if you're sharing your code publicly.
+
+development:
+  secret_key_base: b2089130176357bcc779f2d9fddbd0e6d5d2dad8c6bf3603460aab7c0cabb4458be41911b028a6b3209feb0fcb82aa3b281db68965cea5e9f8b2682f172fcf95
+
+test:
+  secret_key_base: dcf18bf55211cdf44a9d02b94dcf43c25377c8b6f2cb20ccbf3559b8bdb375fda1d01d218152a5ea417b34019b1f7475db7b01147c521514e58b138c317cd0a0
+
+# Do not keep production secrets in the repository,
+# instead read values from the environment.
+production:
+  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
diff --git a/renew_financial_code_challenge/db/migrate/20151117020623_create_deal_a_day.rb b/renew_financial_code_challenge/db/migrate/20151117020623_create_deal_a_day.rb
new file mode 100644
index 0000000..146c7cc
--- /dev/null
+++ b/renew_financial_code_challenge/db/migrate/20151117020623_create_deal_a_day.rb
@@ -0,0 +1,14 @@
+class CreateDealADay < ActiveRecord::Migration
+  def change
+    create_table :deal_a_days do |t|
+      t.column :purchaser_name, :string
+      t.column :item_description, :string
+      t.column :item_price, :float
+      t.column :purchase_count, :integer
+      t.column :merchant_address, :string
+      t.column :merchant_name, :string
+
+      t.timestamps
+    end
+  end
+end
diff --git a/renew_financial_code_challenge/db/migrate/20151117065331_rename_deal_a_days.rb b/renew_financial_code_challenge/db/migrate/20151117065331_rename_deal_a_days.rb
new file mode 100644
index 0000000..6978d1b
--- /dev/null
+++ b/renew_financial_code_challenge/db/migrate/20151117065331_rename_deal_a_days.rb
@@ -0,0 +1,5 @@
+class RenameDealADays < ActiveRecord::Migration
+  def change
+    rename_table :deal_a_days, :deals
+  end
+end
diff --git a/renew_financial_code_challenge/db/schema.rb b/renew_financial_code_challenge/db/schema.rb
new file mode 100644
index 0000000..a519e4f
--- /dev/null
+++ b/renew_financial_code_challenge/db/schema.rb
@@ -0,0 +1,30 @@
+# encoding: UTF-8
+# This file is auto-generated from the current state of the database. Instead
+# of editing this file, please use the migrations feature of Active Record to
+# incrementally modify your database, and then regenerate this schema definition.
+#
+# Note that this schema.rb definition is the authoritative source for your
+# database schema. If you need to create the application database on another
+# system, you should be using db:schema:load, not running all the migrations
+# from scratch. The latter is a flawed and unsustainable approach (the more migrations
+# you'll amass, the slower it'll run and the greater likelihood for issues).
+#
+# It's strongly recommended that you check this file into your version control system.
+
+ActiveRecord::Schema.define(version: 20151117065331) do
+
+  # These are extensions that must be enabled in order to support this database
+  enable_extension "plpgsql"
+
+  create_table "deals", force: :cascade do |t|
+    t.string   "purchaser_name"
+    t.string   "item_description"
+    t.float    "item_price"
+    t.integer  "purchase_count"
+    t.string   "merchant_address"
+    t.string   "merchant_name"
+    t.datetime "created_at"
+    t.datetime "updated_at"
+  end
+
+end
diff --git a/renew_financial_code_challenge/db/seeds.rb b/renew_financial_code_challenge/db/seeds.rb
new file mode 100644
index 0000000..4edb1e8
--- /dev/null
+++ b/renew_financial_code_challenge/db/seeds.rb
@@ -0,0 +1,7 @@
+# This file should contain all the record creation needed to seed the database with its default values.
+# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
+#
+# Examples:
+#
+#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
+#   Mayor.create(name: 'Emanuel', city: cities.first)
diff --git a/renew_financial_code_challenge/lib/assets/.keep b/renew_financial_code_challenge/lib/assets/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/lib/tasks/.keep b/renew_financial_code_challenge/lib/tasks/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/log/.keep b/renew_financial_code_challenge/log/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/public/404.html b/renew_financial_code_challenge/public/404.html
new file mode 100644
index 0000000..b612547
--- /dev/null
+++ b/renew_financial_code_challenge/public/404.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The page you were looking for doesn't exist (404)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/404.html -->
+  <div class="dialog">
+    <div>
+      <h1>The page you were looking for doesn't exist.</h1>
+      <p>You may have mistyped the address or the page may have moved.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/renew_financial_code_challenge/public/422.html b/renew_financial_code_challenge/public/422.html
new file mode 100644
index 0000000..a21f82b
--- /dev/null
+++ b/renew_financial_code_challenge/public/422.html
@@ -0,0 +1,67 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>The change you wanted was rejected (422)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/422.html -->
+  <div class="dialog">
+    <div>
+      <h1>The change you wanted was rejected.</h1>
+      <p>Maybe you tried to change something you didn't have access to.</p>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/renew_financial_code_challenge/public/500.html b/renew_financial_code_challenge/public/500.html
new file mode 100644
index 0000000..061abc5
--- /dev/null
+++ b/renew_financial_code_challenge/public/500.html
@@ -0,0 +1,66 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <title>We're sorry, but something went wrong (500)</title>
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <style>
+  body {
+    background-color: #EFEFEF;
+    color: #2E2F30;
+    text-align: center;
+    font-family: arial, sans-serif;
+    margin: 0;
+  }
+
+  div.dialog {
+    width: 95%;
+    max-width: 33em;
+    margin: 4em auto 0;
+  }
+
+  div.dialog > div {
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #BBB;
+    border-top: #B00100 solid 4px;
+    border-top-left-radius: 9px;
+    border-top-right-radius: 9px;
+    background-color: white;
+    padding: 7px 12% 0;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+
+  h1 {
+    font-size: 100%;
+    color: #730E15;
+    line-height: 1.5em;
+  }
+
+  div.dialog > p {
+    margin: 0 0 1em;
+    padding: 1em;
+    background-color: #F7F7F7;
+    border: 1px solid #CCC;
+    border-right-color: #999;
+    border-left-color: #999;
+    border-bottom-color: #999;
+    border-bottom-left-radius: 4px;
+    border-bottom-right-radius: 4px;
+    border-top-color: #DADADA;
+    color: #666;
+    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
+  }
+  </style>
+</head>
+
+<body>
+  <!-- This file lives in public/500.html -->
+  <div class="dialog">
+    <div>
+      <h1>We're sorry, but something went wrong.</h1>
+    </div>
+    <p>If you are the application owner check the logs for more information.</p>
+  </div>
+</body>
+</html>
diff --git a/renew_financial_code_challenge/public/favicon.ico b/renew_financial_code_challenge/public/favicon.ico
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/public/robots.txt b/renew_financial_code_challenge/public/robots.txt
new file mode 100644
index 0000000..3c9c7c0
--- /dev/null
+++ b/renew_financial_code_challenge/public/robots.txt
@@ -0,0 +1,5 @@
+# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file
+#
+# To ban all spiders from the entire site uncomment the next two lines:
+# User-agent: *
+# Disallow: /
diff --git a/renew_financial_code_challenge/vendor/assets/javascripts/.keep b/renew_financial_code_challenge/vendor/assets/javascripts/.keep
new file mode 100644
index 0000000..e69de29
diff --git a/renew_financial_code_challenge/vendor/assets/stylesheets/.keep b/renew_financial_code_challenge/vendor/assets/stylesheets/.keep
new file mode 100644
index 0000000..e69de29
-- 
2.4.9 (Apple Git-60)

